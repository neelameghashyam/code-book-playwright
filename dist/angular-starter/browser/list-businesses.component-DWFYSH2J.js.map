{
  "version": 3,
  "sources": ["src/app/pages/business/list-businesses/list-businesses.component.ts", "src/app/pages/business/list-businesses/list-businesses.component.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BusinessStore } from '../store/business.store';\r\nimport { DarkModeService } from '../../../services/dark-mode.service';\r\nimport { ResponsiveService } from '../../../services/responsive/responsive.service';\r\n\r\n@Component({\r\n  selector: 'app-list-businesses',\r\n  standalone: true,\r\n  imports: [CommonModule, MatCardModule, MatButtonModule, MatIconModule],\r\n  templateUrl: './list-businesses.component.html'\r\n})\r\nexport class ListBusinessesComponent {\r\npublic darkModeService = inject(DarkModeService);\r\npublic responsiveService = inject(ResponsiveService);\r\n    \r\n  private businessStore = inject(BusinessStore);\r\n  businesses = this.businessStore.businesses;\r\n\r\n  deleteBusiness(id: string) {\r\n    if (confirm('Are you sure you want to delete this business?')) {\r\n      this.businessStore.deleteBusiness(id);\r\n    }\r\n  }\r\n}", "<div class=\"p-5\">\r\n  <!-- Table layout for desktop and tablet -->\r\n  <div *ngIf=\"responsiveService.isDesktop() || responsiveService.isTablet()\" class=\"overflow-x-auto\">\r\n    <table class=\"w-full border-collapse rounded-lg shadow-sm\">\r\n      <thead>\r\n        <tr class=\"bg-gray-100 text-gray-700 uppercase text-xs font-semibold tracking-wider\">\r\n          <th class=\"px-4 py-3 text-left\">Business Name</th>\r\n          <th class=\"px-4 py-3 text-left\">Category</th>\r\n          <th class=\"px-4 py-3 text-left\">Country</th>\r\n          <th class=\"px-4 py-3 text-left\">Contact</th>\r\n          <th class=\"px-4 py-3 text-right\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let business of businesses()\" class=\"border-b border-gray-200 hover:bg-gray-50 transition-colors\">\r\n          <td class=\"px-4 py-3 text-sm text-gray-900\">{{business.name}}</td>\r\n          <td class=\"px-4 py-3 text-sm text-gray-600\">{{business.category}} - {{business.subCategory}}</td>\r\n          <td class=\"px-4 py-3 text-sm text-gray-600\">{{business.country}}</td>\r\n          <td class=\"px-4 py-3 text-sm text-gray-600\">{{business.phone}}</td>\r\n          <td class=\"px-4 py-3 text-right\">\r\n            <button mat-icon-button color=\"warn\" (click)=\"deleteBusiness(business.id)\">\r\n              <mat-icon class=\"text-red-500\">delete</mat-icon>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <!-- Card layout for mobile -->\r\n  <div *ngIf=\"responsiveService.isMobile()\" class=\"flex flex-wrap gap-5\">\r\n    <mat-card *ngFor=\"let business of businesses()\" class=\"w-full mb-5 shadow-md rounded-lg\">\r\n      <mat-card-header class=\"bg-gray-50 p-4\">\r\n        <mat-card-title class=\"text-lg font-semibold text-gray-900\">{{business.name}}</mat-card-title>\r\n        <mat-card-subtitle class=\"text-sm text-gray-600\">{{business.category}} - {{business.subCategory}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <mat-card-content class=\"p-4\">\r\n        <p class=\"mb-2 text-sm\"><strong class=\"text-gray-700\">Country:</strong> <span class=\"text-gray-600\">{{business.country}}</span></p>\r\n        <p class=\"mb-2 text-sm\"><strong class=\"text-gray-700\">Contact:</strong> <span class=\"text-gray-600\">{{business.phone}}</span></p>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"flex justify-end p-2\">\r\n        <button mat-icon-button color=\"warn\" (click)=\"deleteBusiness(business.id)\">\r\n          <mat-icon class=\"text-red-500\">delete</mat-icon>\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "business_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "deleteBusiness", "id", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "name", "\u0275\u0275textInterpolate2", "category", "subCategory", "country", "phone", "\u0275\u0275template", "ListBusinessesComponent_div_1_tr_15_Template", "\u0275\u0275property", "businesses", "business_r5", "_r4", "ListBusinessesComponent_div_2_mat_card_1_Template", "ListBusinessesComponent", "darkModeService", "inject", "DarkModeService", "responsiveService", "ResponsiveService", "businessStore", "BusinessStore", "confirm", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "ListBusinessesComponent_div_1_Template", "ListBusinessesComponent_div_2_Template", "isDesktop", "isTablet", "isMobile", "CommonModule", "NgForOf", "NgIf", "MatCardModule", "MatCard", "MatCardActions", "MatCardContent", "MatCardHeader", "MatCardSubtitle", "MatCardTitle", "MatButtonModule", "MatIconButton", "MatIconModule", "MatIcon", "encapsulation"]
}
