{"version":3,"sources":["node_modules/@angular/animations/fesm2022/private_export-faY_wCkZ.mjs","node_modules/ngx-toastr/fesm2022/ngx-toastr.mjs"],"sourcesContent":["/**\n * @license Angular v20.0.0\n * (c) 2010-2025 Google LLC. https://angular.io/\n * License: MIT\n */\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType = /*#__PURE__*/function (AnimationMetadataType) {\n  /**\n   * Associates a named animation state with a set of CSS styles.\n   * See [`state()`](api/animations/state)\n   */\n  AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n  /**\n   * Data for a transition from one animation state to another.\n   * See `transition()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n  /**\n   * Contains a set of animation steps.\n   * See `sequence()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n  /**\n   * Contains a set of animation steps.\n   * See `group()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n  /**\n   * Contains an animation step.\n   * See `animate()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n  /**\n   * Contains a set of animation steps.\n   * See `keyframes()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n  /**\n   * Contains a set of CSS property-value pairs into a named style.\n   * See `style()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n  /**\n   * Associates an animation with an entry trigger that can be attached to an element.\n   * See `trigger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n  /**\n   * Contains a re-usable animation.\n   * See `animation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n  /**\n   * Contains data to use in executing child animations returned by a query.\n   * See `animateChild()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n  /**\n   * Contains animation parameters for a re-usable animation.\n   * See `useAnimation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n  /**\n   * Contains child-animation query data.\n   * See `query()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n  /**\n   * Contains data for staggering an animation sequence.\n   * See `stagger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n  return AnimationMetadataType;\n}(AnimationMetadataType || {});\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```ts\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```ts\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```angular-ts\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```ts\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n  return {\n    type: AnimationMetadataType.Trigger,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, {@link /api/animations/group group()}, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```ts\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```ts\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n  return {\n    type: AnimationMetadataType.Animate,\n    styles,\n    timings\n  };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```ts\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Group,\n    steps,\n    options\n  };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```ts\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the  {@link /api/animations/group group()} call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a  {@link /api/animations/group group()} or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Sequence,\n    steps,\n    options\n  };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```ts\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```ts\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n  return {\n    type: AnimationMetadataType.Style,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n  return {\n    type: AnimationMetadataType.State,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```ts\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```ts\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n  return {\n    type: AnimationMetadataType.Keyframes,\n    steps\n  };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```ts\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```ts\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```ts\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```ts\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```html\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```ts\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```html\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```ts\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n  return {\n    type: AnimationMetadataType.Transition,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```ts\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Reference,\n    animation: steps,\n    options\n  };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n  return {\n    type: AnimationMetadataType.AnimateChild,\n    options\n  };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n  return {\n    type: AnimationMetadataType.AnimateRef,\n    animation,\n    options\n  };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```ts\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"docs-alert docs-alert-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"docs-alert docs-alert-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```angular-ts\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n  return {\n    type: AnimationMetadataType.Query,\n    selector,\n    animation,\n    options\n  };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n  return {\n    type: AnimationMetadataType.Stagger,\n    timings,\n    animation\n  };\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n  _onDoneFns = [];\n  _onStartFns = [];\n  _onDestroyFns = [];\n  _originalOnDoneFns = [];\n  _originalOnStartFns = [];\n  _started = false;\n  _destroyed = false;\n  _finished = false;\n  _position = 0;\n  parentPlayer = null;\n  totalTime;\n  constructor(duration = 0, delay = 0) {\n    this.totalTime = duration + delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  init() {}\n  play() {\n    if (!this.hasStarted()) {\n      this._onStart();\n      this.triggerMicrotask();\n    }\n    this._started = true;\n  }\n  /** @internal */\n  triggerMicrotask() {\n    queueMicrotask(() => this._onFinish());\n  }\n  _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n  pause() {}\n  restart() {}\n  finish() {\n    this._onFinish();\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this._started = false;\n    this._finished = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  setPosition(position) {\n    this._position = this.totalTime ? position * this.totalTime : 1;\n  }\n  getPosition() {\n    return this.totalTime ? this._position / this.totalTime : 1;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n  _onDoneFns = [];\n  _onStartFns = [];\n  _finished = false;\n  _started = false;\n  _destroyed = false;\n  _onDestroyFns = [];\n  parentPlayer = null;\n  totalTime = 0;\n  players;\n  constructor(_players) {\n    this.players = _players;\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this.players.length;\n    if (total == 0) {\n      queueMicrotask(() => this._onFinish());\n    } else {\n      this.players.forEach(player => {\n        player.onDone(() => {\n          if (++doneCount == total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount == total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount == total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n    this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this.players.forEach(player => player.init());\n  }\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n  _onStart() {\n    if (!this.hasStarted()) {\n      this._started = true;\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n  }\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this.players.forEach(player => player.play());\n  }\n  pause() {\n    this.players.forEach(player => player.pause());\n  }\n  restart() {\n    this.players.forEach(player => player.restart());\n  }\n  finish() {\n    this._onFinish();\n    this.players.forEach(player => player.finish());\n  }\n  destroy() {\n    this._onDestroy();\n  }\n  _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this.players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this.players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n  setPosition(p) {\n    const timeAtPosition = p * this.totalTime;\n    this.players.forEach(player => {\n      const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n  getPosition() {\n    const longestPlayer = this.players.reduce((longestSoFar, player) => {\n      const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n      return newPlayerIsLongest ? player : longestSoFar;\n    }, null);\n    return longestPlayer != null ? longestPlayer.getPosition() : 0;\n  }\n  beforeDestroy() {\n    this.players.forEach(player => {\n      if (player.beforeDestroy) {\n        player.beforeDestroy();\n      }\n    });\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nconst ɵPRE_STYLE = '!';\nexport { AUTO_STYLE, AnimationGroupPlayer, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, ɵPRE_STYLE };\n","import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Injectable, ComponentFactoryResolver, ApplicationRef, SecurityContext, Injector, Inject, signal, Component, ChangeDetectionStrategy, HostBinding, HostListener, makeEnvironmentProviders, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { DOCUMENT, NgIf } from '@angular/common';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/platform-browser';\nconst _c0 = [\"toast-component\", \"\"];\nfunction Toast_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function Toast_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.remove());\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction Toast_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r1.duplicatesCount + 1, \"]\");\n  }\n}\nfunction Toast_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, Toast_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\nfunction Toast_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.message, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction Toast_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.message);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\nfunction Toast_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.width() + \"%\");\n  }\n}\nfunction ToastNoAnimation_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ToastNoAnimation_button_0_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.remove());\n    });\n    i0.ɵɵelementStart(1, \"span\", 6);\n    i0.ɵɵtext(2, \"\\xD7\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ToastNoAnimation_div_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"[\", ctx_r1.duplicatesCount + 1, \"]\");\n  }\n}\nfunction ToastNoAnimation_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, ToastNoAnimation_div_1_ng_container_2_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.titleClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.title);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.duplicatesCount);\n  }\n}\nfunction ToastNoAnimation_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.messageClass);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r1.message, i0.ɵɵsanitizeHtml);\n  }\n}\nfunction ToastNoAnimation_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.options.messageClass);\n    i0.ɵɵattribute(\"aria-label\", ctx_r1.message);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\nfunction ToastNoAnimation_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"width\", ctx_r1.width() + \"%\");\n  }\n}\nlet ToastContainerDirective = /*#__PURE__*/(() => {\n  class ToastContainerDirective {\n    el;\n    constructor(el) {\n      this.el = el;\n    }\n    getContainerElement() {\n      return this.el.nativeElement;\n    }\n    static ɵfac = function ToastContainerDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastContainerDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ToastContainerDirective,\n      selectors: [[\"\", \"toastContainer\", \"\"]],\n      exportAs: [\"toastContainer\"]\n    });\n  }\n  return ToastContainerDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nclass ComponentPortal {\n  _attachedHost;\n  /** The type of the component that will be instantiated for attachment. */\n  component;\n  /**\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\n   * This is different from where the component *renders*, which is determined by the PortalHost.\n   * The origin necessary when the host is outside of the Angular application context.\n   */\n  viewContainerRef;\n  /** Injector used for the instantiation of the component. */\n  injector;\n  constructor(component, injector) {\n    this.component = component;\n    this.injector = injector;\n  }\n  /** Attach this portal to a host. */\n  attach(host, newestOnTop) {\n    this._attachedHost = host;\n    return host.attach(this, newestOnTop);\n  }\n  /** Detach this portal from its host */\n  detach() {\n    const host = this._attachedHost;\n    if (host) {\n      this._attachedHost = undefined;\n      return host.detach();\n    }\n  }\n  /** Whether this portal is attached to a host. */\n  get isAttached() {\n    return this._attachedHost != null;\n  }\n  /**\n   * Sets the PortalHost reference without performing `attach()`. This is used directly by\n   * the PortalHost when it is performing an `attach()` or `detach()`.\n   */\n  setAttachedHost(host) {\n    this._attachedHost = host;\n  }\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching a\n * ComponentPortal\n */\nclass BasePortalHost {\n  /** The portal currently attached to the host. */\n  _attachedPortal;\n  /** A function that will permanently dispose this host. */\n  _disposeFn;\n  attach(portal, newestOnTop) {\n    this._attachedPortal = portal;\n    return this.attachComponentPortal(portal, newestOnTop);\n  }\n  detach() {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost();\n    }\n    this._attachedPortal = undefined;\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = undefined;\n    }\n  }\n  setDisposeFn(fn) {\n    this._disposeFn = fn;\n  }\n}\n\n/**\n * Reference to a toast opened via the Toastr service.\n */\nclass ToastRef {\n  _overlayRef;\n  /** The instance of component opened into the toast. */\n  componentInstance;\n  /** Count of duplicates of this toast */\n  duplicatesCount = 0;\n  /** Subject for notifying the user that the toast has finished closing. */\n  _afterClosed = new Subject();\n  /** triggered when toast is activated */\n  _activate = new Subject();\n  /** notifies the toast that it should close before the timeout */\n  _manualClose = new Subject();\n  /** notifies the toast that it should reset the timeouts */\n  _resetTimeout = new Subject();\n  /** notifies the toast that it should count a duplicate toast */\n  _countDuplicate = new Subject();\n  constructor(_overlayRef) {\n    this._overlayRef = _overlayRef;\n  }\n  manualClose() {\n    this._manualClose.next();\n    this._manualClose.complete();\n  }\n  manualClosed() {\n    return this._manualClose.asObservable();\n  }\n  timeoutReset() {\n    return this._resetTimeout.asObservable();\n  }\n  countDuplicate() {\n    return this._countDuplicate.asObservable();\n  }\n  /**\n   * Close the toast.\n   */\n  close() {\n    this._overlayRef.detach();\n    this._afterClosed.next();\n    this._manualClose.next();\n    this._afterClosed.complete();\n    this._manualClose.complete();\n    this._activate.complete();\n    this._resetTimeout.complete();\n    this._countDuplicate.complete();\n  }\n  /** Gets an observable that is notified when the toast is finished closing. */\n  afterClosed() {\n    return this._afterClosed.asObservable();\n  }\n  isInactive() {\n    return this._activate.isStopped;\n  }\n  activate() {\n    this._activate.next();\n    this._activate.complete();\n  }\n  /** Gets an observable that is notified when the toast has started opening. */\n  afterActivate() {\n    return this._activate.asObservable();\n  }\n  /** Reset the toast timouts and count duplicates */\n  onDuplicate(resetTimeout, countDuplicate) {\n    if (resetTimeout) {\n      this._resetTimeout.next();\n    }\n    if (countDuplicate) {\n      this._countDuplicate.next(++this.duplicatesCount);\n    }\n  }\n}\n\n/**\n * Everything a toast needs to launch\n */\nclass ToastPackage {\n  toastId;\n  config;\n  message;\n  title;\n  toastType;\n  toastRef;\n  _onTap = new Subject();\n  _onAction = new Subject();\n  constructor(toastId, config, message, title, toastType, toastRef) {\n    this.toastId = toastId;\n    this.config = config;\n    this.message = message;\n    this.title = title;\n    this.toastType = toastType;\n    this.toastRef = toastRef;\n    this.toastRef.afterClosed().subscribe(() => {\n      this._onAction.complete();\n      this._onTap.complete();\n    });\n  }\n  /** Fired on click */\n  triggerTap() {\n    this._onTap.next();\n    if (this.config.tapToDismiss) {\n      this._onTap.complete();\n    }\n  }\n  onTap() {\n    return this._onTap.asObservable();\n  }\n  /** available for use in custom toast */\n  triggerAction(action) {\n    this._onAction.next(action);\n  }\n  onAction() {\n    return this._onAction.asObservable();\n  }\n}\nconst DefaultNoComponentGlobalConfig = {\n  maxOpened: 0,\n  autoDismiss: false,\n  newestOnTop: true,\n  preventDuplicates: false,\n  countDuplicates: false,\n  resetTimeoutOnDuplicate: false,\n  includeTitleDuplicates: false,\n  iconClasses: {\n    error: 'toast-error',\n    info: 'toast-info',\n    success: 'toast-success',\n    warning: 'toast-warning'\n  },\n  // Individual\n  closeButton: false,\n  disableTimeOut: false,\n  timeOut: 5000,\n  extendedTimeOut: 1000,\n  enableHtml: false,\n  progressBar: false,\n  toastClass: 'ngx-toastr',\n  positionClass: 'toast-top-right',\n  titleClass: 'toast-title',\n  messageClass: 'toast-message',\n  easing: 'ease-in',\n  easeTime: 300,\n  tapToDismiss: true,\n  onActivateTick: false,\n  progressAnimation: 'decreasing'\n};\nconst TOAST_CONFIG = new InjectionToken('ToastConfig');\n\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n *\n * This is the only part of the portal core that directly touches the DOM.\n */\nclass DomPortalHost extends BasePortalHost {\n  _hostDomElement;\n  _componentFactoryResolver;\n  _appRef;\n  constructor(_hostDomElement, _componentFactoryResolver, _appRef) {\n    super();\n    this._hostDomElement = _hostDomElement;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n  }\n  /**\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n   * @param portal Portal to be attached\n   */\n  attachComponentPortal(portal, newestOnTop) {\n    const componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let componentRef;\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the ChangeDetector for that component to the application (which\n    // happens automatically when using a ViewContainer).\n    componentRef = componentFactory.create(portal.injector);\n    // When creating a component outside of a ViewContainer, we need to manually register\n    // its ChangeDetector with the application. This API is unfortunately not yet published\n    // in Angular core. The change detector must also be deregistered when the component\n    // is destroyed to prevent memory leaks.\n    this._appRef.attachView(componentRef.hostView);\n    this.setDisposeFn(() => {\n      this._appRef.detachView(componentRef.hostView);\n      componentRef.destroy();\n    });\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    if (newestOnTop) {\n      this._hostDomElement.insertBefore(this._getComponentRootNode(componentRef), this._hostDomElement.firstChild);\n    } else {\n      this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n    }\n    return componentRef;\n  }\n  /** Gets the root HTMLElement for an instantiated component. */\n  _getComponentRootNode(componentRef) {\n    return componentRef.hostView.rootNodes[0];\n  }\n}\n\n/** Container inside which all toasts will render. */\nlet OverlayContainer = /*#__PURE__*/(() => {\n  class OverlayContainer {\n    _document = inject(DOCUMENT);\n    _containerElement;\n    ngOnDestroy() {\n      if (this._containerElement && this._containerElement.parentNode) {\n        this._containerElement.parentNode.removeChild(this._containerElement);\n      }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n      if (!this._containerElement) {\n        this._createContainer();\n      }\n      return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body\n     * and 'aria-live=\"polite\"'\n     */\n    _createContainer() {\n      const container = this._document.createElement('div');\n      container.classList.add('overlay-container');\n      container.setAttribute('aria-live', 'polite');\n      this._document.body.appendChild(container);\n      this._containerElement = container;\n    }\n    static ɵfac = function OverlayContainer_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || OverlayContainer)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OverlayContainer,\n      factory: OverlayContainer.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return OverlayContainer;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  _portalHost;\n  constructor(_portalHost) {\n    this._portalHost = _portalHost;\n  }\n  attach(portal, newestOnTop = true) {\n    return this._portalHost.attach(portal, newestOnTop);\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns Resolves when the overlay has been detached.\n   */\n  detach() {\n    return this._portalHost.detach();\n  }\n}\n\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalHost, so any kind of Portal can be loaded into one.\n */\nlet Overlay = /*#__PURE__*/(() => {\n  class Overlay {\n    _overlayContainer = inject(OverlayContainer);\n    _componentFactoryResolver = inject(ComponentFactoryResolver);\n    _appRef = inject(ApplicationRef);\n    _document = inject(DOCUMENT);\n    // Namespace panes by overlay container\n    _paneElements = new Map();\n    /**\n     * Creates an overlay.\n     * @returns A reference to the created overlay.\n     */\n    create(positionClass, overlayContainer) {\n      // get existing pane if possible\n      return this._createOverlayRef(this.getPaneElement(positionClass, overlayContainer));\n    }\n    getPaneElement(positionClass = '', overlayContainer) {\n      if (!this._paneElements.get(overlayContainer)) {\n        this._paneElements.set(overlayContainer, {});\n      }\n      if (!this._paneElements.get(overlayContainer)[positionClass]) {\n        this._paneElements.get(overlayContainer)[positionClass] = this._createPaneElement(positionClass, overlayContainer);\n      }\n      return this._paneElements.get(overlayContainer)[positionClass];\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(positionClass, overlayContainer) {\n      const pane = this._document.createElement('div');\n      pane.id = 'toast-container';\n      pane.classList.add(positionClass);\n      pane.classList.add('toast-container');\n      if (!overlayContainer) {\n        this._overlayContainer.getContainerElement().appendChild(pane);\n      } else {\n        overlayContainer.getContainerElement().appendChild(pane);\n      }\n      return pane;\n    }\n    /**\n     * Create a DomPortalHost into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal host.\n     * @returns A portal host for the given DOM element.\n     */\n    _createPortalHost(pane) {\n      return new DomPortalHost(pane, this._componentFactoryResolver, this._appRef);\n    }\n    /**\n     * Creates an OverlayRef for an overlay in the given DOM element.\n     * @param pane DOM element for the overlay\n     */\n    _createOverlayRef(pane) {\n      return new OverlayRef(this._createPortalHost(pane));\n    }\n    static ɵfac = function Overlay_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Overlay)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: Overlay,\n      factory: Overlay.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return Overlay;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ToastrService = /*#__PURE__*/(() => {\n  class ToastrService {\n    overlay;\n    _injector;\n    sanitizer;\n    ngZone;\n    toastrConfig;\n    currentlyActive = 0;\n    toasts = [];\n    overlayContainer;\n    previousToastMessage;\n    index = 0;\n    constructor(token, overlay, _injector, sanitizer, ngZone) {\n      this.overlay = overlay;\n      this._injector = _injector;\n      this.sanitizer = sanitizer;\n      this.ngZone = ngZone;\n      this.toastrConfig = {\n        ...token.default,\n        ...token.config\n      };\n      if (token.config.iconClasses) {\n        this.toastrConfig.iconClasses = {\n          ...token.default.iconClasses,\n          ...token.config.iconClasses\n        };\n      }\n    }\n    /** show toast */\n    show(message, title, override = {}, type = '') {\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show successful toast */\n    success(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.success || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show error toast */\n    error(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.error || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show info toast */\n    info(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.info || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /** show warning toast */\n    warning(message, title, override = {}) {\n      const type = this.toastrConfig.iconClasses.warning || '';\n      return this._preBuildNotification(type, message, title, this.applyConfig(override));\n    }\n    /**\n     * Remove all or a single toast by id\n     */\n    clear(toastId) {\n      // Call every toastRef manualClose function\n      for (const toast of this.toasts) {\n        if (toastId !== undefined) {\n          if (toast.toastId === toastId) {\n            toast.toastRef.manualClose();\n            return;\n          }\n        } else {\n          toast.toastRef.manualClose();\n        }\n      }\n    }\n    /**\n     * Remove and destroy a single toast by id\n     */\n    remove(toastId) {\n      const found = this._findToast(toastId);\n      if (!found) {\n        return false;\n      }\n      found.activeToast.toastRef.close();\n      this.toasts.splice(found.index, 1);\n      this.currentlyActive = this.currentlyActive - 1;\n      if (!this.toastrConfig.maxOpened || !this.toasts.length) {\n        return false;\n      }\n      if (this.currentlyActive < this.toastrConfig.maxOpened && this.toasts[this.currentlyActive]) {\n        const p = this.toasts[this.currentlyActive].toastRef;\n        if (!p.isInactive()) {\n          this.currentlyActive = this.currentlyActive + 1;\n          p.activate();\n        }\n      }\n      return true;\n    }\n    /**\n     * Determines if toast message is already shown\n     */\n    findDuplicate(title = '', message = '', resetOnDuplicate, countDuplicates) {\n      const {\n        includeTitleDuplicates\n      } = this.toastrConfig;\n      for (const toast of this.toasts) {\n        const hasDuplicateTitle = includeTitleDuplicates && toast.title === title;\n        if ((!includeTitleDuplicates || hasDuplicateTitle) && toast.message === message) {\n          toast.toastRef.onDuplicate(resetOnDuplicate, countDuplicates);\n          return toast;\n        }\n      }\n      return null;\n    }\n    /** create a clone of global config and apply individual settings */\n    applyConfig(override = {}) {\n      return {\n        ...this.toastrConfig,\n        ...override\n      };\n    }\n    /**\n     * Find toast object by id\n     */\n    _findToast(toastId) {\n      for (let i = 0; i < this.toasts.length; i++) {\n        if (this.toasts[i].toastId === toastId) {\n          return {\n            index: i,\n            activeToast: this.toasts[i]\n          };\n        }\n      }\n      return null;\n    }\n    /**\n     * Determines the need to run inside angular's zone then builds the toast\n     */\n    _preBuildNotification(toastType, message, title, config) {\n      if (config.onActivateTick) {\n        return this.ngZone.run(() => this._buildNotification(toastType, message, title, config));\n      }\n      return this._buildNotification(toastType, message, title, config);\n    }\n    /**\n     * Creates and attaches toast data to component\n     * returns the active toast, or in case preventDuplicates is enabled the original/non-duplicate active toast.\n     */\n    _buildNotification(toastType, message, title, config) {\n      if (!config.toastComponent) {\n        throw new Error('toastComponent required');\n      }\n      // max opened and auto dismiss = true\n      // if timeout = 0 resetting it would result in setting this.hideTime = Date.now(). Hence, we only want to reset timeout if there is\n      // a timeout at all\n      const duplicate = this.findDuplicate(title, message, this.toastrConfig.resetTimeoutOnDuplicate && config.timeOut > 0, this.toastrConfig.countDuplicates);\n      if ((this.toastrConfig.includeTitleDuplicates && title || message) && this.toastrConfig.preventDuplicates && duplicate !== null) {\n        return duplicate;\n      }\n      this.previousToastMessage = message;\n      let keepInactive = false;\n      if (this.toastrConfig.maxOpened && this.currentlyActive >= this.toastrConfig.maxOpened) {\n        keepInactive = true;\n        if (this.toastrConfig.autoDismiss) {\n          this.clear(this.toasts[0].toastId);\n        }\n      }\n      const overlayRef = this.overlay.create(config.positionClass, this.overlayContainer);\n      this.index = this.index + 1;\n      let sanitizedMessage = message;\n      if (message && config.enableHtml) {\n        sanitizedMessage = this.sanitizer.sanitize(SecurityContext.HTML, message);\n      }\n      const toastRef = new ToastRef(overlayRef);\n      const toastPackage = new ToastPackage(this.index, config, sanitizedMessage, title, toastType, toastRef);\n      /** New injector that contains an instance of `ToastPackage`. */\n      const providers = [{\n        provide: ToastPackage,\n        useValue: toastPackage\n      }];\n      const toastInjector = Injector.create({\n        providers,\n        parent: this._injector\n      });\n      const component = new ComponentPortal(config.toastComponent, toastInjector);\n      const portal = overlayRef.attach(component, config.newestOnTop);\n      toastRef.componentInstance = portal.instance;\n      const ins = {\n        toastId: this.index,\n        title: title || '',\n        message: message || '',\n        toastRef,\n        onShown: toastRef.afterActivate(),\n        onHidden: toastRef.afterClosed(),\n        onTap: toastPackage.onTap(),\n        onAction: toastPackage.onAction(),\n        portal\n      };\n      if (!keepInactive) {\n        this.currentlyActive = this.currentlyActive + 1;\n        setTimeout(() => {\n          ins.toastRef.activate();\n        });\n      }\n      this.toasts.push(ins);\n      return ins;\n    }\n    static ɵfac = function ToastrService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastrService)(i0.ɵɵinject(TOAST_CONFIG), i0.ɵɵinject(Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i2.DomSanitizer), i0.ɵɵinject(i0.NgZone));\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ToastrService,\n      factory: ToastrService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ToastrService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Toast = /*#__PURE__*/(() => {\n  class Toast {\n    toastrService;\n    toastPackage;\n    ngZone;\n    message;\n    title;\n    options;\n    duplicatesCount;\n    originalTimeout;\n    /** width of progress bar */\n    width = signal(-1);\n    /** a combination of toast type and options.toastClass */\n    toastClasses = '';\n    state;\n    /** controls animation */\n    get _state() {\n      return this.state();\n    }\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n      if (this.state().value === 'inactive') {\n        return 'none';\n      }\n      return;\n    }\n    timeout;\n    intervalId;\n    hideTime;\n    sub;\n    sub1;\n    sub2;\n    sub3;\n    constructor(toastrService, toastPackage, ngZone) {\n      this.toastrService = toastrService;\n      this.toastPackage = toastPackage;\n      this.ngZone = ngZone;\n      this.message = toastPackage.message;\n      this.title = toastPackage.title;\n      this.options = toastPackage.config;\n      this.originalTimeout = toastPackage.config.timeOut;\n      this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n      this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n        this.activateToast();\n      });\n      this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n        this.remove();\n      });\n      this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n        this.resetTimeout();\n      });\n      this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n        this.duplicatesCount = count;\n      });\n      this.state = signal({\n        value: 'inactive',\n        params: {\n          easeTime: this.toastPackage.config.easeTime,\n          easing: 'ease-in'\n        }\n      });\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.sub1.unsubscribe();\n      this.sub2.unsubscribe();\n      this.sub3.unsubscribe();\n      clearInterval(this.intervalId);\n      clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n      this.state.update(state => ({\n        ...state,\n        value: 'active'\n      }));\n      if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n        this.outsideTimeout(() => this.remove(), this.options.timeOut);\n        this.hideTime = new Date().getTime() + this.options.timeOut;\n        if (this.options.progressBar) {\n          this.outsideInterval(() => this.updateProgress(), 10);\n        }\n      }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n      if (this.width() === 0 || this.width() === 100 || !this.options.timeOut) {\n        return;\n      }\n      const now = new Date().getTime();\n      const remaining = this.hideTime - now;\n      this.width.set(remaining / this.options.timeOut * 100);\n      if (this.options.progressAnimation === 'increasing') {\n        this.width.update(width => 100 - width);\n      }\n      if (this.width() <= 0) {\n        this.width.set(0);\n      }\n      if (this.width() >= 100) {\n        this.width.set(100);\n      }\n    }\n    resetTimeout() {\n      clearTimeout(this.timeout);\n      clearInterval(this.intervalId);\n      this.state.update(state => ({\n        ...state,\n        value: 'active'\n      }));\n      this.outsideTimeout(() => this.remove(), this.originalTimeout);\n      this.options.timeOut = this.originalTimeout;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width.set(-1);\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n      if (this.state().value === 'removed') {\n        return;\n      }\n      clearTimeout(this.timeout);\n      this.state.update(state => ({\n        ...state,\n        value: 'removed'\n      }));\n      this.outsideTimeout(() => this.toastrService.remove(this.toastPackage.toastId), +this.toastPackage.config.easeTime);\n    }\n    tapToast() {\n      if (this.state().value === 'removed') {\n        return;\n      }\n      this.toastPackage.triggerTap();\n      if (this.options.tapToDismiss) {\n        this.remove();\n      }\n    }\n    stickAround() {\n      if (this.state().value === 'removed') {\n        return;\n      }\n      if (this.options.disableTimeOut !== 'extendedTimeOut') {\n        clearTimeout(this.timeout);\n        this.options.timeOut = 0;\n        this.hideTime = 0;\n        // disable progressBar\n        clearInterval(this.intervalId);\n        this.width.set(0);\n      }\n    }\n    delayedHideToast() {\n      if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state().value === 'removed') {\n        return;\n      }\n      this.outsideTimeout(() => this.remove(), this.options.extendedTimeOut);\n      this.options.timeOut = this.options.extendedTimeOut;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width.set(-1);\n      if (this.options.progressBar) {\n        this.outsideInterval(() => this.updateProgress(), 10);\n      }\n    }\n    outsideTimeout(func, timeout) {\n      if (this.ngZone) {\n        this.ngZone.runOutsideAngular(() => this.timeout = setTimeout(() => this.runInsideAngular(func), timeout));\n      } else {\n        this.timeout = setTimeout(() => func(), timeout);\n      }\n    }\n    outsideInterval(func, timeout) {\n      if (this.ngZone) {\n        this.ngZone.runOutsideAngular(() => this.intervalId = setInterval(() => this.runInsideAngular(func), timeout));\n      } else {\n        this.intervalId = setInterval(() => func(), timeout);\n      }\n    }\n    runInsideAngular(func) {\n      if (this.ngZone) {\n        this.ngZone.run(() => func());\n      } else {\n        func();\n      }\n    }\n    static ɵfac = function Toast_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || Toast)(i0.ɵɵdirectiveInject(ToastrService), i0.ɵɵdirectiveInject(ToastPackage), i0.ɵɵdirectiveInject(i0.NgZone));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Toast,\n      selectors: [[\"\", \"toast-component\", \"\"]],\n      hostVars: 5,\n      hostBindings: function Toast_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function Toast_click_HostBindingHandler() {\n            return ctx.tapToast();\n          })(\"mouseenter\", function Toast_mouseenter_HostBindingHandler() {\n            return ctx.stickAround();\n          })(\"mouseleave\", function Toast_mouseleave_HostBindingHandler() {\n            return ctx.delayedHideToast();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵsyntheticHostProperty(\"@flyInOut\", ctx._state);\n          i0.ɵɵclassMap(ctx.toastClasses);\n          i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n        }\n      },\n      attrs: _c0,\n      decls: 5,\n      vars: 5,\n      consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n      template: function Toast_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, Toast_button_0_Template, 3, 0, \"button\", 0)(1, Toast_div_1_Template, 3, 5, \"div\", 1)(2, Toast_div_2_Template, 1, 3, \"div\", 2)(3, Toast_div_3_Template, 2, 4, \"div\", 3)(4, Toast_div_4_Template, 2, 2, \"div\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.title);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n        }\n      },\n      dependencies: [NgIf],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('flyInOut', [state('inactive', style({\n          opacity: 0\n        })), state('active', style({\n          opacity: 1\n        })), state('removed', style({\n          opacity: 0\n        })), transition('inactive => active', animate('{{ easeTime }}ms {{ easing }}')), transition('active => removed', animate('{{ easeTime }}ms {{ easing }}'))])]\n      },\n      changeDetection: 0\n    });\n  }\n  return Toast;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DefaultGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: Toast\n};\n/**\n * @description\n * Provides the `TOAST_CONFIG` token with the given config.\n *\n * @param config The config to configure toastr.\n * @returns The environment providers.\n *\n * @example\n * ```ts\n * import { provideToastr } from 'ngx-toastr';\n *\n * bootstrap(AppComponent, {\n *   providers: [\n *     provideToastr({\n *       timeOut: 2000,\n *       positionClass: 'toast-top-right',\n *     }),\n *   ],\n * })\n */\nconst provideToastr = (config = {}) => {\n  const providers = [{\n    provide: TOAST_CONFIG,\n    useValue: {\n      default: DefaultGlobalConfig,\n      config\n    }\n  }];\n  return makeEnvironmentProviders(providers);\n};\nlet ToastrModule = /*#__PURE__*/(() => {\n  class ToastrModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: ToastrModule,\n        providers: [provideToastr(config)]\n      };\n    }\n    static ɵfac = function ToastrModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastrModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ToastrModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return ToastrModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ToastrComponentlessModule = /*#__PURE__*/(() => {\n  class ToastrComponentlessModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: ToastrModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoComponentGlobalConfig,\n            config\n          }\n        }]\n      };\n    }\n    static ɵfac = function ToastrComponentlessModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastrComponentlessModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ToastrComponentlessModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return ToastrComponentlessModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ToastNoAnimation = /*#__PURE__*/(() => {\n  class ToastNoAnimation {\n    toastrService;\n    toastPackage;\n    appRef;\n    message;\n    title;\n    options;\n    duplicatesCount;\n    originalTimeout;\n    /** width of progress bar */\n    width = signal(-1);\n    /** a combination of toast type and options.toastClass */\n    toastClasses = '';\n    /** hides component when waiting to be displayed */\n    get displayStyle() {\n      if (this.state() === 'inactive') {\n        return 'none';\n      }\n      return null;\n    }\n    /** controls animation */\n    state = signal('inactive');\n    timeout;\n    intervalId;\n    hideTime;\n    sub;\n    sub1;\n    sub2;\n    sub3;\n    constructor(toastrService, toastPackage, appRef) {\n      this.toastrService = toastrService;\n      this.toastPackage = toastPackage;\n      this.appRef = appRef;\n      this.message = toastPackage.message;\n      this.title = toastPackage.title;\n      this.options = toastPackage.config;\n      this.originalTimeout = toastPackage.config.timeOut;\n      this.toastClasses = `${toastPackage.toastType} ${toastPackage.config.toastClass}`;\n      this.sub = toastPackage.toastRef.afterActivate().subscribe(() => {\n        this.activateToast();\n      });\n      this.sub1 = toastPackage.toastRef.manualClosed().subscribe(() => {\n        this.remove();\n      });\n      this.sub2 = toastPackage.toastRef.timeoutReset().subscribe(() => {\n        this.resetTimeout();\n      });\n      this.sub3 = toastPackage.toastRef.countDuplicate().subscribe(count => {\n        this.duplicatesCount = count;\n      });\n    }\n    ngOnDestroy() {\n      this.sub.unsubscribe();\n      this.sub1.unsubscribe();\n      this.sub2.unsubscribe();\n      this.sub3.unsubscribe();\n      clearInterval(this.intervalId);\n      clearTimeout(this.timeout);\n    }\n    /**\n     * activates toast and sets timeout\n     */\n    activateToast() {\n      this.state.set('active');\n      if (!(this.options.disableTimeOut === true || this.options.disableTimeOut === 'timeOut') && this.options.timeOut) {\n        this.timeout = setTimeout(() => {\n          this.remove();\n        }, this.options.timeOut);\n        this.hideTime = new Date().getTime() + this.options.timeOut;\n        if (this.options.progressBar) {\n          this.intervalId = setInterval(() => this.updateProgress(), 10);\n        }\n      }\n      if (this.options.onActivateTick) {\n        this.appRef.tick();\n      }\n    }\n    /**\n     * updates progress bar width\n     */\n    updateProgress() {\n      if (this.width() === 0 || this.width() === 100 || !this.options.timeOut) {\n        return;\n      }\n      const now = new Date().getTime();\n      const remaining = this.hideTime - now;\n      this.width.set(remaining / this.options.timeOut * 100);\n      if (this.options.progressAnimation === 'increasing') {\n        this.width.update(width => 100 - width);\n      }\n      if (this.width() <= 0) {\n        this.width.set(0);\n      }\n      if (this.width() >= 100) {\n        this.width.set(100);\n      }\n    }\n    resetTimeout() {\n      clearTimeout(this.timeout);\n      clearInterval(this.intervalId);\n      this.state.set('active');\n      this.options.timeOut = this.originalTimeout;\n      this.timeout = setTimeout(() => this.remove(), this.originalTimeout);\n      this.hideTime = new Date().getTime() + (this.originalTimeout || 0);\n      this.width.set(-1);\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    /**\n     * tells toastrService to remove this toast after animation time\n     */\n    remove() {\n      if (this.state() === 'removed') {\n        return;\n      }\n      clearTimeout(this.timeout);\n      this.state.set('removed');\n      this.timeout = setTimeout(() => this.toastrService.remove(this.toastPackage.toastId));\n    }\n    tapToast() {\n      if (this.state() === 'removed') {\n        return;\n      }\n      this.toastPackage.triggerTap();\n      if (this.options.tapToDismiss) {\n        this.remove();\n      }\n    }\n    stickAround() {\n      if (this.state() === 'removed') {\n        return;\n      }\n      clearTimeout(this.timeout);\n      this.options.timeOut = 0;\n      this.hideTime = 0;\n      // disable progressBar\n      clearInterval(this.intervalId);\n      this.width.set(0);\n    }\n    delayedHideToast() {\n      if (this.options.disableTimeOut === true || this.options.disableTimeOut === 'extendedTimeOut' || this.options.extendedTimeOut === 0 || this.state() === 'removed') {\n        return;\n      }\n      this.timeout = setTimeout(() => this.remove(), this.options.extendedTimeOut);\n      this.options.timeOut = this.options.extendedTimeOut;\n      this.hideTime = new Date().getTime() + (this.options.timeOut || 0);\n      this.width.set(-1);\n      if (this.options.progressBar) {\n        this.intervalId = setInterval(() => this.updateProgress(), 10);\n      }\n    }\n    static ɵfac = function ToastNoAnimation_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastNoAnimation)(i0.ɵɵdirectiveInject(ToastrService), i0.ɵɵdirectiveInject(ToastPackage), i0.ɵɵdirectiveInject(i0.ApplicationRef));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: ToastNoAnimation,\n      selectors: [[\"\", \"toast-component\", \"\"]],\n      hostVars: 4,\n      hostBindings: function ToastNoAnimation_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function ToastNoAnimation_click_HostBindingHandler() {\n            return ctx.tapToast();\n          })(\"mouseenter\", function ToastNoAnimation_mouseenter_HostBindingHandler() {\n            return ctx.stickAround();\n          })(\"mouseleave\", function ToastNoAnimation_mouseleave_HostBindingHandler() {\n            return ctx.delayedHideToast();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.toastClasses);\n          i0.ɵɵstyleProp(\"display\", ctx.displayStyle);\n        }\n      },\n      attrs: _c0,\n      decls: 5,\n      vars: 5,\n      consts: [[\"type\", \"button\", \"class\", \"toast-close-button\", \"aria-label\", \"Close\", 3, \"click\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", \"innerHTML\", 4, \"ngIf\"], [\"role\", \"alert\", 3, \"class\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"toast-close-button\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"role\", \"alert\", 3, \"innerHTML\"], [\"role\", \"alert\"], [1, \"toast-progress\"]],\n      template: function ToastNoAnimation_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, ToastNoAnimation_button_0_Template, 3, 0, \"button\", 0)(1, ToastNoAnimation_div_1_Template, 3, 5, \"div\", 1)(2, ToastNoAnimation_div_2_Template, 1, 3, \"div\", 2)(3, ToastNoAnimation_div_3_Template, 2, 4, \"div\", 3)(4, ToastNoAnimation_div_4_Template, 2, 2, \"div\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.options.closeButton);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.title);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.message && ctx.options.enableHtml);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.message && !ctx.options.enableHtml);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.options.progressBar);\n        }\n      },\n      dependencies: [NgIf],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return ToastNoAnimation;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DefaultNoAnimationsGlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: ToastNoAnimation\n};\nlet ToastNoAnimationModule = /*#__PURE__*/(() => {\n  class ToastNoAnimationModule {\n    static forRoot(config = {}) {\n      return {\n        ngModule: ToastNoAnimationModule,\n        providers: [{\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: DefaultNoAnimationsGlobalConfig,\n            config\n          }\n        }]\n      };\n    }\n    static ɵfac = function ToastNoAnimationModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastNoAnimationModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ToastNoAnimationModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n  return ToastNoAnimationModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, ComponentPortal, DefaultGlobalConfig, DefaultNoAnimationsGlobalConfig, DefaultNoComponentGlobalConfig, Overlay, OverlayContainer, OverlayRef, TOAST_CONFIG, Toast, ToastContainerDirective, ToastNoAnimation, ToastNoAnimationModule, ToastPackage, ToastRef, ToastrComponentlessModule, ToastrModule, ToastrService, provideToastr };\n"],"mappings":"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","names":["AnimationMetadataType","AUTO_STYLE","trigger","name","definitions","animate","timings","styles","sequence","steps","options","AnimationMetadataType","style","tokens","state","name","styles","transition","stateChangeExpr","steps","options","AnimationMetadataType","NoopAnimationPlayer","duration","delay","fn","position","phaseName","methods","AnimationGroupPlayer","_players","doneCount","destroyCount","startCount","total","player","time","p","timeAtPosition","longestPlayer","longestSoFar","ɵPRE_STYLE","_c0","Toast_button_0_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","ɵɵtext","ɵɵelementEnd","Toast_div_1_ng_container_2_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","Toast_div_1_Template","ɵɵtemplate","ɵɵclassMap","ɵɵattribute","ɵɵproperty","Toast_div_2_Template","ɵɵelement","ɵɵsanitizeHtml","Toast_div_3_Template","Toast_div_4_Template","ɵɵstyleProp","ToastNoAnimation_button_0_Template","ToastNoAnimation_div_1_ng_container_2_Template","ToastNoAnimation_div_1_Template","ToastNoAnimation_div_2_Template","ToastNoAnimation_div_3_Template","ToastNoAnimation_div_4_Template","ComponentPortal","component","injector","host","newestOnTop","BasePortalHost","portal","fn","ToastRef","Subject","_overlayRef","resetTimeout","countDuplicate","ToastPackage","toastId","config","message","title","toastType","toastRef","action","DefaultNoComponentGlobalConfig","TOAST_CONFIG","InjectionToken","DomPortalHost","_hostDomElement","_componentFactoryResolver","_appRef","componentFactory","componentRef","OverlayContainer","inject","DOCUMENT","container","__ngFactoryType__","ɵɵdefineInjectable","OverlayRef","_portalHost","Overlay","ComponentFactoryResolver$1","ApplicationRef","positionClass","overlayContainer","pane","ToastrService","token","overlay","_injector","sanitizer","ngZone","__spreadValues","override","type","toast","found","p","resetOnDuplicate","countDuplicates","includeTitleDuplicates","hasDuplicateTitle","i","duplicate","keepInactive","overlayRef","sanitizedMessage","SecurityContext","toastPackage","providers","toastInjector","Injector","ins","ɵɵinject","DomSanitizer","NgZone","Toast","signal","toastrService","count","state","__spreadProps","now","remaining","width","func","timeout","ɵɵdirectiveInject","ɵɵdefineComponent","rf","ctx","ɵɵlistener","ɵɵsyntheticHostProperty","ɵɵclassMap","ɵɵstyleProp","_c0","ɵɵtemplate","Toast_button_0_Template","Toast_div_1_Template","Toast_div_2_Template","Toast_div_3_Template","Toast_div_4_Template","ɵɵproperty","ɵɵadvance","NgIf","trigger","style","transition","animate","DefaultGlobalConfig","provideToastr","makeEnvironmentProviders","ToastNoAnimation","signal","toastrService","toastPackage","appRef","count","now","remaining","width","__ngFactoryType__","ɵɵdirectiveInject","ToastrService","ToastPackage","ApplicationRef","ɵɵdefineComponent","rf","ctx","ɵɵlistener","ɵɵclassMap","ɵɵstyleProp","_c0","ɵɵtemplate","ToastNoAnimation_button_0_Template","ToastNoAnimation_div_1_Template","ToastNoAnimation_div_2_Template","ToastNoAnimation_div_3_Template","ToastNoAnimation_div_4_Template","ɵɵproperty","ɵɵadvance","NgIf","DefaultNoAnimationsGlobalConfig","__spreadProps","__spreadValues","DefaultNoComponentGlobalConfig"],"x_google_ignoreList":[0,1]}