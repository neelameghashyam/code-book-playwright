{"version":3,"sources":["node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/app/pages/business/store/business.store.ts"],"sourcesContent":["var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import { patchState, signalStore, withComputed, withHooks, withMethods, withState } from '@ngrx/signals';\r\nimport { computed } from '@angular/core';\r\nimport { Business } from '../business.model';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\ninterface BusinessState {\r\n  businesses: Business[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: BusinessState = {\r\n  businesses: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst STORAGE_KEY = 'businesses';\r\n\r\nexport const BusinessStore = signalStore(\r\n  { providedIn: 'root' },\r\n  withState(initialState),\r\n  withComputed(({ businesses }) => ({\r\n    businessCount: computed(() => businesses().length),\r\n  })),\r\n  withMethods((store) => ({\r\n    loadBusinesses(): void {\r\n      try {\r\n        patchState(store, { loading: true });\r\n        const data = localStorage.getItem(STORAGE_KEY);\r\n        const businesses = data ? JSON.parse(data) : [];\r\n        patchState(store, { businesses, loading: false, error: null });\r\n      } catch (error) {\r\n        patchState(store, { loading: false, error: 'Failed to load businesses' });\r\n      }\r\n    },\r\n\r\n    addBusiness(business: Business): void {\r\n      try {\r\n        patchState(store, { loading: true });\r\n        const businesses = [...store.businesses()];\r\n        business.id = uuidv4();\r\n        businesses.push(business);\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(businesses));\r\n        patchState(store, { businesses, loading: false, error: null });\r\n      } catch (error) {\r\n        patchState(store, { loading: false, error: 'Failed to add business' });\r\n      }\r\n    },\r\n\r\n    updateBusiness(business: Business): void {\r\n      try {\r\n        patchState(store, { loading: true });\r\n        const businesses = [...store.businesses()];\r\n        const index = businesses.findIndex(b => b.id === business.id);\r\n        if (index === -1) {\r\n          throw new Error('Business not found');\r\n        }\r\n        businesses[index] = business;\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(businesses));\r\n        patchState(store, { businesses, loading: false, error: null });\r\n      } catch (error) {\r\n        patchState(store, { loading: false, error: 'Failed to update business' });\r\n      }\r\n    },\r\n\r\n    deleteBusiness(id: string): void {\r\n      try {\r\n        patchState(store, { loading: true });\r\n        const businesses = store.businesses().filter(b => b.id !== id);\r\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(businesses));\r\n        patchState(store, { businesses, loading: false, error: null });\r\n      } catch (error) {\r\n        patchState(store, { loading: false, error: 'Failed to delete business' });\r\n      }\r\n    },\r\n\r\n    getBusiness(id: string): Business | undefined {\r\n      try {\r\n        return store.businesses().find(b => b.id === id);\r\n      } catch (error) {\r\n        patchState(store, { error: `Failed to fetch business with ID ${id}` });\r\n        return undefined;\r\n      }\r\n    },\r\n  })),\r\n  withHooks({\r\n    onInit(store) {\r\n      store.loadBusinesses();\r\n    },\r\n  })\r\n);"],"mappings":"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","names":["randomUUID","native_default","getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","v4","options","buf","offset","native_default","rnds","rng","i","unsafeStringify","v4_default","initialState","businesses","loading","error","STORAGE_KEY","BusinessStore","signalStore","providedIn","withState","withComputed","businessCount","computed","length","withMethods","store","loadBusinesses","patchState","data","localStorage","getItem","JSON","parse","addBusiness","business","id","uuidv4","push","setItem","stringify","updateBusiness","index","findIndex","b","Error","deleteBusiness","filter","getBusiness","find","withHooks","onInit"],"x_google_ignoreList":[0,1,2,3]}