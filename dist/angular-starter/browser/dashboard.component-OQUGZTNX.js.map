{
  "version": 3,
  "sources": ["src/app/pages/dashboard/dashboard.component.ts", "src/app/pages/dashboard/dashboard.component.html"],
  "sourcesContent": ["import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef, inject } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators, FormArray } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ResponsiveService } from '../../services/responsive/responsive.service';\r\nimport { BusinessForm, ServiceProvider } from './interfaces';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    TranslateModule,\r\n  ],\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  private cdr = inject(ChangeDetectorRef);\r\n  private dialog = inject(MatDialog);\r\n  public providerForm: FormGroup;\r\n  private _countries: string[] = [];\r\n  public serviceProviders: ServiceProvider[] = [];\r\n  responsiveClass: string = 'md:flex-row';\r\n  readOnly: boolean = false;\r\n\r\n  get countries(): string[] {\r\n    return this._countries;\r\n  }\r\n\r\n  get serviceProvidersArray(): FormArray {\r\n    return this.providerForm.get('serviceProviders') as FormArray;\r\n  }\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private responsiveService: ResponsiveService,\r\n    private translateService: TranslateService\r\n  ) {\r\n    this.providerForm = this.fb.group({\r\n      country: ['', Validators.required],\r\n      businessName: ['', [Validators.required, Validators.minLength(3)]],\r\n      addressLine1: ['', Validators.required],\r\n      addressLine2: [''],\r\n      addressLine3: [''],\r\n      city: ['', Validators.required],\r\n      state: ['', Validators.pattern('^[A-Za-z0-9]{1,10}$')],\r\n      postalCode: ['', [Validators.required, Validators.minLength(3)]],\r\n      serviceProviders: this.fb.array([]),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const lang = localStorage.getItem('lang') || 'en';\r\n    this.translateService.use(lang);\r\n\r\n    this._countries = ['USA', 'Canada', 'UK', 'Australia', 'India'];\r\n    this.loadFromLocalStorage();\r\n\r\n    this.responsiveService.currentBreakpoint().subscribe((breakpoint) => {\r\n      this.responsiveClass = breakpoint === 'xsmall' || breakpoint === 'small' ? 'flex-col' : 'md:flex-row';\r\n      this.cdr.markForCheck();\r\n    });\r\n  }\r\n\r\n  async openPopup(provider?: ServiceProvider, index?: number): Promise<void> {\r\n    const { ServiceProviderComponent } = await import('./service-provider/service-provider.component');\r\n    const dialogRef = this.dialog.open(ServiceProviderComponent, {\r\n      width: '90%',\r\n      maxWidth: '1200px',\r\n      height: 'auto',\r\n      maxHeight: '120vh',\r\n      enterAnimationDuration: '300ms',\r\n      exitAnimationDuration: '300ms',\r\n      data: { isPopup: true, provider, index },\r\n      autoFocus: true,\r\n      restoreFocus: true,\r\n      panelClass: 'custom-service-provider-dialog-large',\r\n    });\r\n  }\r\n\r\n  public createServiceProviderFormGroup(provider: ServiceProvider): FormGroup {\r\n    return this.fb.group({\r\n      id: [provider?.id || ''],\r\n      spName: [provider?.spName || '', Validators.required],\r\n      addressLine1: [provider?.addressLine1 || '', Validators.required],\r\n      addressLine2: [provider?.addressLine2 || ''],\r\n      addressLine3: [provider?.addressLine3 || ''],\r\n      city: [provider?.city || '', Validators.required],\r\n      state: [provider?.state || ''],\r\n      postalCode: [provider?.postalCode || '', Validators.required],\r\n      country: [provider?.country || '', Validators.required],\r\n      businessName: [provider?.businessName || ''],\r\n    });\r\n  }\r\n\r\n  editServiceProvider(index: number): void {\r\n    if (index >= 0 && index < this.serviceProviders.length) {\r\n      this.openPopup(this.serviceProviders[index], index);\r\n    }\r\n  }\r\n\r\n  deleteServiceProvider(index: number): void {\r\n    if (index < 0 || index >= this.serviceProviders.length) {\r\n      this.toastr.error('Invalid provider index');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const deletedProvider = this.serviceProviders.splice(index, 1)[0];\r\n      this.serviceProvidersArray.removeAt(index);\r\n\r\n      const existingProviders: ServiceProvider[] = JSON.parse(localStorage.getItem('serviceProviders') || '[]');\r\n      const updatedProviders = existingProviders.filter((provider) => provider.id !== deletedProvider.id);\r\n      localStorage.setItem('serviceProviders', JSON.stringify(updatedProviders));\r\n\r\n      this.toastr.success('Service provider deleted successfully');\r\n    } catch (error) {\r\n      this.toastr.error('Error deleting service provider');\r\n      console.error('LocalStorage error:', error);\r\n    } finally {\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.providerForm.valid) {\r\n      const formData: BusinessForm = {\r\n        ...this.providerForm.value,\r\n        serviceProviders: this.serviceProviders,\r\n      };\r\n      try {\r\n        localStorage.setItem('businessForm', JSON.stringify(formData));\r\n        this.toastr.success('Business form submitted successfully');\r\n        this.readOnly = true;\r\n        this.providerForm.disable();\r\n      } catch (error) {\r\n        this.toastr.error('Error saving business form');\r\n        console.error('LocalStorage error:', error);\r\n      }\r\n    } else {\r\n      this.toastr.error('Please fill all required fields');\r\n      this.providerForm.markAllAsTouched();\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  enableEditMode(): void {\r\n    this.readOnly = false;\r\n    this.providerForm.enable();\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.providerForm.reset({\r\n      country: this.countries[0] || '',\r\n      businessName: '',\r\n      addressLine1: '',\r\n      addressLine2: '',\r\n      addressLine3: '',\r\n      city: '',\r\n      state: '',\r\n      postalCode: '',\r\n      serviceProviders: this.serviceProvidersArray.value,\r\n    });\r\n    this.readOnly = false;\r\n    this.providerForm.enable();\r\n    this.toastr.info('Form reset');\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  loadFromLocalStorage(): void {\r\n    try {\r\n      const providerData = localStorage.getItem('serviceProviders');\r\n      let standaloneProviders: ServiceProvider[] = providerData ? JSON.parse(providerData) : [];\r\n      this.serviceProviders = Array.from(\r\n        new Map(standaloneProviders.map((provider) => [provider.id, provider])).values()\r\n      );\r\n      this.serviceProvidersArray.clear();\r\n      this.serviceProviders.forEach((provider) => {\r\n        this.serviceProvidersArray.push(this.createServiceProviderFormGroup(provider));\r\n      });\r\n    } catch (error) {\r\n      this.toastr.error('Error loading saved data');\r\n      console.error('LocalStorage error:', error);\r\n    } finally {\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  public saveToLocalStorage(): void {\r\n    try {\r\n      const formData: BusinessForm = {\r\n        ...this.providerForm.value,\r\n        serviceProviders: this.serviceProviders,\r\n      };\r\n      localStorage.setItem('businessForm', JSON.stringify(formData));\r\n    } catch (error) {\r\n      this.toastr.error('Error saving data');\r\n      console.error('LocalStorage error:', error);\r\n    }\r\n  }\r\n\r\n  trackByProvider(index: number, provider: ServiceProvider): string {\r\n    return provider?.id || index.toString();\r\n  }\r\n}", "<div class=\"container mx-auto max-w-4xl p-4 sm:p-6 font-sans bg-white dark:bg-gray-900 transition-colors duration-300\">\r\n  <mat-card class=\"p-6 bg-white dark:bg-gray-800 shadow-3xl rounded-lg\">\r\n    <mat-card-header>\r\n      <mat-card-title class=\"flex justify-between items-center\">\r\n        <h2 class=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">{{ 'addBusinessForm' | translate }}</h2>\r\n        <button *ngIf=\"readOnly\" (click)=\"enableEditMode()\" \r\n                class=\"absolute top-4 right-4 flex p-6\"\r\n                [attr.aria-label]=\"'edit' | translate\">\r\n          <mat-icon>edit</mat-icon>\r\n        </button>\r\n      </mat-card-title>\r\n      <mat-card-subtitle class=\"text-gray-900 dark:text-gray-400 mt-2\">\r\n        {{ 'fillBusinessFields' | translate }}\r\n      </mat-card-subtitle>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"providerForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"flex flex-col md:flex-row gap-4 md:gap-6\">\r\n          <!-- Left Column -->\r\n          <div class=\"flex-1 flex flex-col gap-4\">\r\n            <!-- Country -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"country\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'country' | translate }}</label>\r\n              <select\r\n                id=\"country\"\r\n                formControlName=\"country\"\r\n                autocomplete=\"country\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 h-10\"\r\n                [ngClass]=\"{\r\n                  'border-[#D7373C]': providerForm.get('country')?.invalid && providerForm.get('country')?.touched,\r\n                  'bg-gray-100 dark:bg-gray-700': readOnly\r\n                }\"\r\n                aria-required=\"true\"\r\n                [attr.aria-invalid]=\"providerForm.get('country')?.invalid && providerForm.get('country')?.touched\"\r\n                aria-describedby=\"countryError\"\r\n              >\r\n                <option value=\"\" disabled>{{ 'selectCountry' | translate }}</option>\r\n                <option *ngFor=\"let country of countries\" [value]=\"country\">\r\n                  {{ country }}\r\n                </option>\r\n              </select>\r\n              <small\r\n                id=\"countryError\"\r\n                class=\"text-xs text-[#D7373C] dark:text-[#F87171] mt-1 error-message\"\r\n                [ngClass]=\"{\r\n                  'visible opacity-100': providerForm.get('country')?.invalid && providerForm.get('country')?.touched,\r\n                  'invisible opacity-0': !(providerForm.get('country')?.invalid && providerForm.get('country')?.touched)\r\n                }\"\r\n              >\r\n                {{ 'countryRequired' | translate }}\r\n              </small>\r\n            </div>\r\n\r\n            <!-- Address Line 1 -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"addressLine1\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'addressLine1' | translate }}</label>\r\n              <input\r\n                id=\"addressLine1\"\r\n                type=\"text\"\r\n                formControlName=\"addressLine1\"\r\n                autocomplete=\"address-line1\"\r\n                [placeholder]=\"'addressLine1Placeholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{\r\n                  'border-[#D7373C] dark:border-[#F87171]': providerForm.get('addressLine1')?.invalid && providerForm.get('addressLine1')?.touched,\r\n                  'bg-gray-100 dark:bg-gray-700': readOnly\r\n                }\"\r\n                aria-required=\"true\"\r\n                [attr.aria-invalid]=\"providerForm.get('addressLine1')?.invalid && providerForm.get('addressLine1')?.touched\"\r\n                aria-describedby=\"addressLine1Error\"\r\n              />\r\n              <small\r\n                id=\"addressLine1Error\"\r\n                class=\"text-xs text-[#D7373C] dark:text-[#F87171] mt-1 error-message\"\r\n                [ngClass]=\"{\r\n                  'visible opacity-100': providerForm.get('addressLine1')?.invalid && providerForm.get('addressLine1')?.touched,\r\n                  'invisible opacity-0': !(providerForm.get('addressLine1')?.invalid && providerForm.get('addressLine1')?.touched)\r\n                }\"\r\n              >\r\n                {{ 'addressLine1Required' | translate }}\r\n              </small>\r\n            </div>\r\n\r\n            <!-- Address Line 3 -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"addressLine3\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'addressLine3' | translate }}</label>\r\n              <input\r\n                id=\"addressLine3\"\r\n                type=\"text\"\r\n                formControlName=\"addressLine3\"\r\n                autocomplete=\"address-line3\"\r\n                [placeholder]=\"'addressLine3Placeholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{'bg-gray-100 dark:bg-gray-700': readOnly}\"\r\n              />\r\n              <small class=\"text-xs text-transparent mt-1 error-message\">Placeholder</small>\r\n            </div>\r\n\r\n            <!-- State / Province -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"state\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'stateProvince' | translate }}</label>\r\n              <input\r\n                id=\"state\"\r\n                type=\"text\"\r\n                formControlName=\"state\"\r\n                autocomplete=\"address-level1\"\r\n                [placeholder]=\"'statePlaceholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{\r\n                  'border-[#D7373C] dark:border-[#F87171]': providerForm.get('state')?.invalid && providerForm.get('state')?.touched,\r\n                  'bg-gray-100 dark:bg-gray-700': readOnly\r\n                }\"\r\n                [attr.aria-invalid]=\"providerForm.get('state')?.invalid && providerForm.get('state')?.touched\"\r\n                aria-describedby=\"stateError\"\r\n              />\r\n              <small\r\n                id=\"stateError\"\r\n                class=\"text-xs text-[#D7373C] dark:text-[#F87171] mt-1 error-message\"\r\n                [ngClass]=\"{\r\n                  'visible opacity-100': providerForm.get('state')?.invalid && providerForm.get('state')?.touched,\r\n                  'invisible opacity-0': !(providerForm.get('state')?.invalid && providerForm.get('state')?.touched)\r\n                }\"\r\n              >\r\n                {{ 'stateInvalid' | translate }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Right Column -->\r\n          <div class=\"flex-1 flex flex-col gap-4\">\r\n            <!-- Business Name -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"businessName\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'businessName' | translate }}</label>\r\n              <input\r\n                id=\"businessName\"\r\n                type=\"text\"\r\n                formControlName=\"businessName\"\r\n                autocomplete=\"organization\"\r\n                [placeholder]=\"'businessNamePlaceholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{\r\n                  'border-[#D7373C] dark:border-[#F87171]': providerForm.get('businessName')?.invalid && providerForm.get('businessName')?.touched,\r\n                  'bg-gray-100 dark:bg-gray-700': readOnly\r\n                }\"\r\n                aria-required=\"true\"\r\n                [attr.aria-invalid]=\"providerForm.get('businessName')?.invalid && providerForm.get('businessName')?.touched\"\r\n                aria-describedby=\"businessNameError\"\r\n              />\r\n              <small\r\n                id=\"businessNameError\"\r\n                class=\"text-xs text-[#D7373C] dark:text-[#F87171] mt-1 error-message\"\r\n                [ngClass]=\"{\r\n                  'visible opacity-100': providerForm.get('businessName')?.invalid && providerForm.get('businessName')?.touched,\r\n                  'invisible opacity-0': !(providerForm.get('businessName')?.invalid && providerForm.get('businessName')?.touched)\r\n                }\"\r\n              >\r\n                {{ 'businessNameInvalid' | translate }}\r\n              </small>\r\n            </div>\r\n\r\n            <!-- Address Line 2 -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"addressLine2\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'addressLine2' | translate }}</label>\r\n              <input\r\n                id=\"addressLine2\"\r\n                type=\"text\"\r\n                formControlName=\"addressLine2\"\r\n                autocomplete=\"address-line2\"\r\n                [placeholder]=\"'addressLine2Placeholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{'bg-gray-100 dark:bg-gray-700': readOnly}\"\r\n              />\r\n              <small class=\"text-xs text-transparent mt-1 error-message\">Placeholder</small>\r\n            </div>\r\n\r\n            <!-- City / Town -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"city\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'cityTown' | translate }}</label>\r\n              <input\r\n                id=\"city\"\r\n                type=\"text\"\r\n                formControlName=\"city\"\r\n                autocomplete=\"address-level2\"\r\n                [placeholder]=\"'cityPlaceholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{\r\n                  'border-[#D7373C] dark:border-[#F87171]': providerForm.get('city')?.invalid && providerForm.get('city')?.touched,\r\n                  'bg-gray-100 dark:bg-gray-700': readOnly\r\n                }\"\r\n                aria-required=\"true\"\r\n                [attr.aria-invalid]=\"providerForm.get('city')?.invalid && providerForm.get('city')?.touched\"\r\n                aria-describedby=\"cityError\"\r\n              />\r\n              <small\r\n                id=\"cityError\"\r\n                class=\"text-xs text-[#D7373C] dark:text-[#F87171] mt-1 error-message\"\r\n                [ngClass]=\"{\r\n                  'visible opacity-100': providerForm.get('city')?.invalid && providerForm.get('city')?.touched,\r\n                  'invisible opacity-0': !(providerForm.get('city')?.invalid && providerForm.get('city')?.touched)\r\n                }\"\r\n              >\r\n                {{ 'cityRequired' | translate }}\r\n              </small>\r\n            </div>\r\n\r\n            <!-- Postal Code / Zip Code -->\r\n            <div class=\"flex flex-col min-h-[6rem]\">\r\n              <label for=\"postalCode\" class=\"text-sm font-bold text-gray-700 dark:text-gray-200\">{{ 'postalCode' | translate }}</label>\r\n              <input\r\n                id=\"postalCode\"\r\n                type=\"text\"\r\n                formControlName=\"postalCode\"\r\n                autocomplete=\"postal-code\"\r\n                [placeholder]=\"'postalCodePlaceholder' | translate\"\r\n                class=\"p-2 border rounded text-sm w-full focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 dark:border-gray-600 dark:text-gray-100 dark:placeholder-gray-400 h-10\"\r\n                [ngClass]=\"{\r\n                  'border-[#D7373C] dark:border-[#F87171]': providerForm.get('postalCode')?.invalid && providerForm.get('postalCode')?.touched,\r\n                  'bg-gray-100 dark:bg-gray-700': readOnly\r\n                }\"\r\n                aria-required=\"true\"\r\n                [attr.aria-invalid]=\"providerForm.get('postalCode')?.invalid && providerForm.get('postalCode')?.touched\"\r\n                aria-describedby=\"postalCodeError\"\r\n              />\r\n              <small\r\n                id=\"postalCodeError\"\r\n                class=\"text-xs text-[#D7373C] dark:text-[#F87171] mt-1 error-message\"\r\n                [ngClass]=\"{\r\n                  'visible opacity-100': providerForm.get('postalCode')?.invalid && providerForm.get('postalCode')?.touched,\r\n                  'invisible opacity-0': !(providerForm.get('postalCode')?.invalid && providerForm.get('postalCode')?.touched)\r\n                }\"\r\n              >\r\n                {{ 'postalCodeInvalid' | translate }}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Service Providers -->\r\n        <div class=\"flex flex-col gap-2 mt-6\" *ngIf=\"!readOnly\">\r\n          <p>{{ 'serviceProviders' | translate }}</p>\r\n          <div (click)=\"openPopup()\" class=\"flex items-center gap-1 text-[#CF4500] hover:text-[#B53C00] dark:text-[#CF4500] dark:hover:text-[#B53C00] cursor-pointer\">\r\n            <mat-icon>add_circle</mat-icon>\r\n            <span>{{ 'addServiceProvider' | translate }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Service Providers Table -->\r\n        <div class=\"p-4 mt-6\">\r\n          <div class=\"overflow-x-auto\">\r\n            <table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead class=\"bg-gray-50 dark:bg-gray-800\">\r\n                <tr>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">{{ 'serviceProviderName' | translate }}</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">{{ 'address' | translate }}</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">{{ 'actions' | translate }}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700\">\r\n                <tr *ngFor=\"let provider of serviceProviders; let i = index\">\r\n                  <td class=\"px-6 py-4 text-sm text-gray-900 dark:text-gray-100\">{{ provider.spName }}</td>\r\n                  <td class=\"px-6 py-4 text-sm text-gray-900 dark:text-gray-100\">\r\n                    {{ provider.addressLine1 }}\r\n                  </td>\r\n                  <td class=\"px-6 py-4 text-sm\" *ngIf=\"!readOnly\">\r\n                    <button\r\n                      (click)=\"editServiceProvider(i)\"\r\n                      class=\"text-[#CF4500] hover:text-[#B53C00] dark:text-[#CF4500] dark:hover:text-[#B53C00]\"\r\n                      [attr.aria-label]=\"'edit' | translate\"\r\n                    >\r\n                      <mat-icon>edit</mat-icon>\r\n                    </button>\r\n                    <button\r\n                      (click)=\"deleteServiceProvider(i)\"\r\n                      class=\"text-[#CF4500] hover:text-[#B53C00] dark:text-[#CF4500] dark:hover:text-[#B53C00]\"\r\n                      [attr.aria-label]=\"'delete' | translate\"\r\n                    >\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-card-content>\r\n    <div align=\"end\" class=\"p-4\" *ngIf=\"!readOnly\">\r\n      <div class=\"flex flex-col sm:flex-row gap-3 w-full sm:w-auto\">\r\n        <button\r\n          (click)=\"onCancel()\"\r\n          class=\"bg-[#CF4500] text-white px-6 py-2 rounded-full text-sm font-medium hover:bg-[#B53C00] focus:ring-2 focus:ring-[#CF4500] w-full sm:w-32 uppercase transition-colors duration-200\"\r\n          [attr.aria-label]=\"'cancel' | translate\"\r\n        >\r\n          {{ 'cancel' | translate }}\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          class=\"bg-[#CF4500] text-white px-6 py-2 rounded-full text-sm font-medium hover:bg-[#B53C00] focus:ring-2 focus:ring-[#CF4500] w-full sm:w-32 uppercase transition-colors duration-200\"\r\n          [disabled]=\"providerForm.invalid\"\r\n          (click)=\"onSubmit()\"\r\n          [attr.aria-label]=\"'submit' | translate\"\r\n        >\r\n          {{ 'submit' | translate }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n</div>"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "enableEditMode", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275property", "country_r3", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "_r4", "openPopup", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "_r5", "i_r6", "index", "editServiceProvider", "deleteServiceProvider", "\u0275\u0275template", "DashboardComponent_tr_105_td_5_Template", "provider_r7", "spName", "addressLine1", "readOnly", "_r8", "onCancel", "onSubmit", "providerForm", "invalid", "DashboardComponent", "fb", "toastr", "responsiveService", "translateService", "cdr", "inject", "ChangeDetectorRef", "dialog", "MatDialog", "_countries", "serviceProviders", "responsiveClass", "countries", "serviceProvidersArray", "get", "constructor", "group", "country", "Validators", "required", "businessName", "minLength", "addressLine2", "addressLine3", "city", "state", "pattern", "postalCode", "array", "ngOnInit", "lang", "localStorage", "getItem", "use", "loadFromLocalStorage", "currentBreakpoint", "subscribe", "breakpoint", "markForCheck", "provider", "__async", "ServiceProviderComponent", "dialogRef", "open", "width", "maxWidth", "height", "maxHeight", "enterAnimationDuration", "exitAnimationDuration", "data", "isPopup", "autoFocus", "restoreFocus", "panelClass", "createServiceProviderFormGroup", "id", "length", "error", "deletedProvider", "splice", "removeAt", "updatedProviders", "JSON", "parse", "filter", "setItem", "stringify", "success", "console", "valid", "formData", "__spreadProps", "__spreadValues", "value", "disable", "markAllAsTouched", "enable", "reset", "info", "providerData", "standaloneProviders", "Array", "from", "Map", "map", "values", "clear", "forEach", "push", "saveToLocalStorage", "trackByProvider", "toString", "\u0275\u0275directiveInject", "FormBuilder", "ToastrService", "ResponsiveService", "TranslateService", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "DashboardComponent_button_7_Template", "DashboardComponent_option_23_Template", "\u0275\u0275element", "DashboardComponent_div_89_Template", "DashboardComponent_tr_105_Template", "DashboardComponent_div_106_Template", "\u0275\u0275pureFunction2", "_c0", "tmp_5_0", "touched", "_c1", "tmp_9_0", "_c2", "tmp_13_0", "tmp_15_0", "\u0275\u0275pureFunction1", "_c3", "tmp_22_0", "tmp_24_0", "tmp_28_0", "tmp_30_0", "tmp_37_0", "tmp_39_0", "tmp_43_0", "tmp_45_0", "ReactiveFormsModule", "\u0275NgNoValidate", "NgSelectOption", "\u0275NgSelectMultipleOption", "DefaultValueAccessor", "SelectControlValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "CommonModule", "NgClass", "NgForOf", "NgIf", "MatDialogModule", "MatIconModule", "MatIcon", "MatTableModule", "MatFormFieldModule", "MatInputModule", "MatSelectModule", "MatButtonModule", "MatCardModule", "MatCard", "MatCardContent", "MatCardHeader", "MatCardSubtitle", "MatCardTitle", "TranslateModule", "TranslatePipe", "encapsulation", "changeDetection"]
}
