{
  "version": 3,
  "sources": ["src/app/pages/users/store/user-store.ts", "src/app/pages/users/add-user/add-user.component.ts", "src/app/pages/users/add-user/add-user.component.html", "src/app/pages/users/users.component.ts", "src/app/pages/users/users.component.html"],
  "sourcesContent": ["import {\r\n    patchState,\r\n    signalStore,\r\n    withComputed,\r\n    withHooks,\r\n    withMethods,\r\n    withState,\r\n} from '@ngrx/signals';\r\nimport { computed, inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../user';\r\nimport { lastValueFrom } from 'rxjs';\r\n\r\ninterface ApiUser {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    address: {\r\n        street: string;\r\n        suite: string;\r\n        city: string;\r\n        zipcode: string;\r\n        geo: {\r\n            lat: string;\r\n            lng: string;\r\n        };\r\n    };\r\n    phone: string;\r\n    website: string;\r\n    company: {\r\n        name: string;\r\n        catchPhrase: string;\r\n        bs: string;\r\n    };\r\n}\r\n\r\ntype UserState = {\r\n    initialized: boolean;\r\n    error: string | null;\r\n    users: User[];\r\n};\r\n\r\nconst initialState: UserState = {\r\n    initialized: false,\r\n    error: null,\r\n    users: [],\r\n};\r\n\r\nconst apiUrl = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport const UserStore = signalStore(\r\n    { providedIn: 'root' },\r\n    withState(initialState),\r\n    withComputed(({ users }) => ({\r\n        users: computed(() => users()),\r\n        isLoading: computed(() => !initialState.initialized),\r\n    })),\r\n    withMethods((store, http = inject(HttpClient)) => ({\r\n        async loadUsers() {\r\n            try {\r\n                const localData = localStorage.getItem('users-data');\r\n                if (localData) {\r\n                    const users: User[] = JSON.parse(localData);\r\n                    patchState(store, { users, initialized: true, error: null });\r\n                    return;\r\n                }\r\n\r\n                const response = await lastValueFrom(http.get<ApiUser[]>(apiUrl));\r\n                const mappedUsers: User[] = response.map(user => ({\r\n                    id: user.id,\r\n                    name: user.name,\r\n                    company: user.company.name,\r\n                    bs: user.company.bs,\r\n                    website: user.website,\r\n                }));\r\n                localStorage.setItem('users-data', JSON.stringify(mappedUsers));\r\n                patchState(store, { users: mappedUsers, initialized: true, error: null });\r\n            } catch (error) {\r\n                patchState(store, { error: 'Failed to load users' });\r\n                throw error;\r\n            }\r\n        },\r\n        addUser(user: User) {\r\n            try {\r\n                const newUsers = [...store.users(), { ...user, id: Date.now() }];\r\n                localStorage.setItem('users-data', JSON.stringify(newUsers));\r\n                patchState(store, { users: newUsers, error: null });\r\n            } catch (error) {\r\n                patchState(store, { error: 'Failed to add user' });\r\n                throw error;\r\n            }\r\n        },\r\n        updateUser(user: User) {\r\n            try {\r\n                const updatedUsers = store.users().map(u =>\r\n                    u.id === user.id ? user : u\r\n                );\r\n                localStorage.setItem('users-data', JSON.stringify(updatedUsers));\r\n                patchState(store, { users: updatedUsers, error: null });\r\n            } catch (error) {\r\n                patchState(store, { error: 'Failed to update user' });\r\n                throw error;\r\n            }\r\n        },\r\n        deleteUser(userId: number) {\r\n            try {\r\n                const updatedUsers = store.users().filter(u => u.id !== userId);\r\n                localStorage.setItem('users-data', JSON.stringify(updatedUsers));\r\n                patchState(store, { users: updatedUsers, error: null });\r\n            } catch (error) {\r\n                patchState(store, { error: 'Failed to delete user' });\r\n                throw error;\r\n            }\r\n        },\r\n        getUser(userId: number): User | undefined {\r\n            try {\r\n                return store.users().find(u => u.id === userId);\r\n            } catch (error) {\r\n                patchState(store, { error: `Failed to fetch user with ID ${userId}` });\r\n                throw error;\r\n            }\r\n        },\r\n    })),\r\n    withHooks({\r\n        onInit(store) {\r\n            store.loadUsers();\r\n        },\r\n    })\r\n);", "import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { User } from '../user';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { UserStore } from '../store/user-store';\r\nimport { inject } from '@angular/core';\r\nimport { DarkModeService } from '../../../services/dark-mode.service';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    TranslateModule\r\n\r\n  ],\r\n  templateUrl: './add-user.component.html',\r\n  styleUrl: './add-user.component.scss',\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n  title = 'Add User';\r\n  store = inject(UserStore);\r\n  isEdit = false;\r\n\r\n  userForm = new FormGroup({\r\n    id: new FormControl({ value: 0, disabled: true }),\r\n    name: new FormControl('', Validators.required),\r\n    company: new FormControl('', Validators.required),\r\n    bs: new FormControl('', Validators.required),\r\n    website: new FormControl('', Validators.required),\r\n  });\r\n\r\n  constructor(\r\n    private ref: MatDialogRef<AddUserComponent>,\r\n    private translateService: TranslateService,\r\n    private toastr: ToastrService,\r\n    @Inject(MAT_DIALOG_DATA) public data: { userId: number },\r\n    public darkModeService: DarkModeService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    if (this.data?.userId) {\r\n      this.isEdit = true;\r\n      this.title = 'Edit User';\r\n      const user = this.store.getUser(this.data.userId);\r\n      if (user) {\r\n        this.userForm.patchValue({\r\n          id: user.id,\r\n          name: user.name,\r\n          company: user.company,\r\n          bs: user.bs,\r\n          website: user.website,\r\n        });\r\n      } else {\r\n        this.toastr.error('Failed to load user data');\r\n        this.closePopup();\r\n      }\r\n    }\r\n  }\r\n\r\n  saveUser() {\r\n    if (this.userForm.invalid) {\r\n      this.toastr.error('Please fill all required fields');\r\n      return;\r\n    }\r\n\r\n    const userData: User = {\r\n      id: this.isEdit ? this.userForm.getRawValue().id! : Date.now(),\r\n      name: this.userForm.getRawValue().name!,\r\n      company: this.userForm.getRawValue().company!,\r\n      bs: this.userForm.getRawValue().bs!,\r\n      website: this.userForm.getRawValue().website!,\r\n    };\r\n\r\n    try {\r\n      if (this.isEdit) {\r\n        this.store.updateUser(userData);\r\n        this.toastr.success('User updated successfully');\r\n      } else {\r\n        this.store.addUser(userData);\r\n        this.toastr.success('User added successfully');\r\n      }\r\n      this.closePopup();\r\n    } catch (error) {\r\n      this.toastr.error(this.isEdit ? 'Failed to update user' : 'Failed to add user');\r\n    }\r\n  }\r\n\r\n  closePopup() {\r\n    this.ref.close();\r\n  }\r\n}", "<form [formGroup]=\"userForm\" (ngSubmit)=\"saveUser()\" [class.dark-theme]=\"darkModeService.isDarkMode()\">\r\n    <div class=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n      <!-- Card Header -->\r\n      <div class=\"px-6 py-4\">\r\n        <h2 class=\"text-xl font-semibold text-white\">{{title}}</h2>\r\n      </div>\r\n      \r\n      <!-- Card Content -->\r\n      <div class=\"p-6 space-y-6\">\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <!-- User ID Field -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">{{'userId' | translate}}</label>\r\n            <input \r\n              formControlName=\"id\" \r\n              type=\"number\" \r\n              readonly\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 bg-gray-100\"\r\n            >\r\n          </div>\r\n  \r\n          <!-- Name Field -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">{{'userName' | translate}}</label>\r\n            <input \r\n              formControlName=\"name\" \r\n              required \r\n              placeholder=\"{{'name' | translate}}\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n          </div>\r\n  \r\n          <!-- Company Field -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">{{'company' | translate}}</label>\r\n            <input \r\n              formControlName=\"company\" \r\n              required \r\n              placeholder=\"{{'company' | translate}}\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n          </div>\r\n  \r\n          <!-- Business Strategy Field -->\r\n          <div class=\"space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">{{'businessStrategy' | translate}}</label>\r\n            <input \r\n              formControlName=\"bs\" \r\n              required \r\n              placeholder=\"{{'businessStrategy' | translate}}\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n          </div>\r\n  \r\n          <!-- Website Field -->\r\n          <div class=\"md:col-span-2 space-y-2\">\r\n            <label class=\"block text-sm font-medium text-gray-700\">{{'website' | translate}}</label>\r\n            <input \r\n              formControlName=\"website\" \r\n              required \r\n              placeholder=\"{{'website' | translate}}\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- Card Actions -->\r\n      <div class=\"bg-gray-50 px-6 py-4 flex justify-end space-x-3\">\r\n        <button \r\n          type=\"submit\" \r\n          class=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n        >\r\n          {{'save' | translate}}\r\n        </button>\r\n        <button \r\n          type=\"button\" \r\n          (click)=\"closePopup()\"\r\n          class=\"px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 font-medium rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\"\r\n        >\r\n          {{'close' | translate}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n</form>", "import { Component, effect, inject, OnDestroy, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableDataSource, MatTableModule } from '@angular/material/table';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DarkModeService } from '../../services/dark-mode.service';\r\nimport { User } from './user';\r\nimport { UserStore } from './store/user-store';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  standalone: true,\r\n  imports: [\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    TranslateModule\r\n  ],\r\n  templateUrl: './users.component.html',\r\n  styleUrl: './users.component.scss'\r\n})\r\nexport class UsersComponent implements OnInit, OnDestroy {\r\n  store = inject(UserStore);\r\n  toastr = inject(ToastrService);\r\n  dataSource = new MatTableDataSource<User>([]);\r\n  displayedColumns: string[] = ['id', 'name', 'company', 'bs', 'website', 'action'];\r\n  private dialog = inject(MatDialog);\r\n  private cdr = inject(ChangeDetectorRef);\r\n\r\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\r\n  pageSizeOptions: number[] = [5, 10, 25];\r\n  pageSize: number = 5;\r\n  searchTerm: string = '';\r\n\r\n  constructor(\r\n    public darkModeService: DarkModeService,\r\n    private translateService: TranslateService\r\n  ) {\r\n    effect(() => {\r\n      this.dataSource.data = this.store.users();\r\n      if (this.paginator) {\r\n        this.dataSource.paginator = this.paginator;\r\n      } else {\r\n        console.warn('Paginator not initialized');\r\n      }\r\n      if (this.store.error()) {\r\n        this.toastr.error(this.store.error());\r\n      }\r\n      this.cdr.detectChanges();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.store.loadUsers();\r\n    this.dataSource.filterPredicate = (data: User, filter: string) => {\r\n      const searchTerm = filter.toLowerCase();\r\n      return data.name.toLowerCase().includes(searchTerm) ||\r\n             data.company.toLowerCase().includes(searchTerm) ||\r\n             data.bs.toLowerCase().includes(searchTerm) ||\r\n             data.website.toLowerCase().includes(searchTerm) ||\r\n             data.id.toString().includes(searchTerm);\r\n    };\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log('Destroying UsersComponent');\r\n  }\r\n\r\n  addUser() {\r\n    this.openPopup(0);\r\n  }\r\n\r\n  deleteUser(userId: number) {\r\n    this.store.deleteUser(userId);\r\n  }\r\n\r\n  editUser(userId: number) {\r\n    this.openPopup(userId);\r\n  }\r\n\r\n  openPopup(userId: number) {\r\n    this.dialog.open(AddUserComponent, {\r\n      width: '50%',\r\n      exitAnimationDuration: '1000ms',\r\n      enterAnimationDuration: '1000ms',\r\n      data: { userId },\r\n    });\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n}", "<div class=\"bg-white rounded-lg shadow-lg overflow-hidden\" [class.dark-theme]=\"darkModeService.isDarkMode()\">\r\n    <!-- Card Header -->\r\n    <div class=\"p-4 border-b border-gray-200 flex justify-between items-center\">\r\n      <div class=\"relative w-64\">\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"{{'search' | translate}}...\"\r\n          [(ngModel)]=\"searchTerm\"\r\n          (input)=\"applyFilter($event)\"\r\n          class=\"w-full pl-4 pr-10 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n        <svg class=\"absolute right-3 top-2.5 h-5 w-5 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\r\n        </svg>\r\n      </div>\r\n      <button \r\n        (click)=\"addUser()\"\r\n        class=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n      >\r\n        {{'addNew' | translate}}\r\n      </button>\r\n    </div>\r\n  \r\n    <!-- Table View -->\r\n    <div class=\"p-4 hidden md:block\">\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y divide-gray-200\">\r\n          <thead class=\"bg-gray-50\">\r\n            <tr>\r\n              <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{{'userId' | translate}}</th>\r\n              <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{{'name' | translate}}</th>\r\n              <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{{'company' | translate}}</th>\r\n              <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{{'businessStrategy' | translate}}</th>\r\n              <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{{'website' | translate}}</th>\r\n              <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">{{'actions' | translate}}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"bg-white divide-y divide-gray-200\">\r\n            <tr *ngFor=\"let element of dataSource.filteredData | slice: (paginator ? paginator.pageIndex * paginator.pageSize : 0) : (paginator ? (paginator.pageIndex + 1) * paginator.pageSize : pageSize)\">\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{element.id}}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{element.name}}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{element.company}}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{element.bs}}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{{element.website}}</td>\r\n              <td class=\"px-6 py-4 whitespace-nowrap text-sm\">\r\n                <button \r\n                  (click)=\"editUser(element.id)\"\r\n                  class=\"mr-2 px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n                >\r\n                  {{'edit' | translate}}\r\n                </button>\r\n                <button \r\n                  (click)=\"deleteUser(element.id)\"\r\n                  class=\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded-md text-sm transition duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\r\n                >\r\n                  {{'delete' | translate}}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-center\">\r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          showFirstLastButtons\r\n          aria-label=\"Select page of users\"\r\n        ></mat-paginator>\r\n      </div>\r\n    </div>\r\n  \r\n    <!-- Card View (Mobile) -->\r\n    <div class=\"p-4 md:hidden\">\r\n      <div class=\"grid grid-cols-1 gap-4\">\r\n        <div \r\n          *ngFor=\"let element of dataSource.filteredData | slice: (paginator ? paginator.pageIndex * paginator.pageSize : 0) : (paginator ? (paginator.pageIndex + 1) * paginator.pageSize : pageSize)\"\r\n          class=\"bg-white rounded-lg shadow p-4\"\r\n        >\r\n          <div class=\"space-y-2\">\r\n            <div class=\"flex justify-between\">\r\n              <span class=\"text-sm font-medium text-gray-500\">{{'userId' | translate}}</span>\r\n              <span class=\"text-sm text-gray-900\">{{element.id}}</span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n              <span class=\"text-sm font-medium text-gray-500\">{{'name' | translate}}</span>\r\n              <span class=\"text-sm text-gray-900\">{{element.name}}</span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n              <span class=\"text-sm font-medium text-gray-500\">{{'company' | translate}}</span>\r\n              <span class=\"text-sm text-gray-900\">{{element.company}}</span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n              <span class=\"text-sm font-medium text-gray-500\">{{'businessStrategy' | translate}}</span>\r\n              <span class=\"text-sm text-gray-900\">{{element.bs}}</span>\r\n            </div>\r\n            <div class=\"flex justify-between\">\r\n              <span class=\"text-sm font-medium text-gray-500\">{{'website' | translate}}</span>\r\n              <span class=\"text-sm text-gray-900\">{{element.website}}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-4 flex space-x-2\">\r\n            <button \r\n              (click)=\"editUser(element.id)\"\r\n              class=\"flex-1 px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white rounded-md text-sm transition duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n            >\r\n              {{'edit' | translate}}\r\n            </button>\r\n            <button \r\n              (click)=\"deleteUser(element.id)\"\r\n              class=\"flex-1 px-3 py-1 bg-red-600 hover:bg-red-700 text-white rounded-md text-sm transition duration-200 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\r\n            >\r\n              {{'delete' | translate}}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-center\">\r\n        <mat-paginator\r\n          [pageSizeOptions]=\"pageSizeOptions\"\r\n          [pageSize]=\"pageSize\"\r\n          showFirstLastButtons\r\n          aria-label=\"Select page of users\"\r\n        ></mat-paginator>\r\n      </div>\r\n    </div>\r\n</div>"],
  "mappings": "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",
  "names": ["initialState", "initialized", "error", "users", "apiUrl", "UserStore", "signalStore", "providedIn", "withState", "withComputed", "computed", "isLoading", "withMethods", "store", "http", "inject", "HttpClient", "loadUsers", "__async", "localData", "localStorage", "getItem", "JSON", "parse", "patchState", "mappedUsers", "lastValueFrom", "get", "map", "user", "id", "name", "company", "bs", "website", "setItem", "stringify", "addUser", "newUsers", "__spreadProps", "__spreadValues", "Date", "now", "updateUser", "updatedUsers", "u", "deleteUser", "userId", "filter", "getUser", "find", "withHooks", "onInit", "AddUserComponent", "ref", "translateService", "toastr", "data", "darkModeService", "title", "store", "inject", "UserStore", "isEdit", "userForm", "FormGroup", "id", "FormControl", "value", "disabled", "name", "Validators", "required", "company", "bs", "website", "constructor", "ngOnInit", "userId", "user", "getUser", "patchValue", "error", "closePopup", "saveUser", "invalid", "userData", "getRawValue", "Date", "now", "updateUser", "success", "addUser", "close", "\u0275\u0275directiveInject", "MatDialogRef", "TranslateService", "ToastrService", "MAT_DIALOG_DATA", "DarkModeService", "selectors", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275element", "\u0275\u0275classProp", "isDarkMode", "\u0275\u0275property", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "\u0275\u0275pipeBind1", "\u0275\u0275interpolate", "\u0275\u0275textInterpolate1", "MatCardModule", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NumberValueAccessor", "NgControlStatus", "NgControlStatusGroup", "RequiredValidator", "FormGroupDirective", "FormControlName", "MatFormFieldModule", "MatInputModule", "MatButtonModule", "MatIconModule", "TranslateModule", "TranslatePipe", "encapsulation", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275listener", "element_r2", "\u0275\u0275restoreView", "_r1", "$implicit", "ctx_r2", "\u0275\u0275nextContext", "\u0275\u0275resetView", "editUser", "id", "deleteUser", "\u0275\u0275advance", "\u0275\u0275textInterpolate", "name", "company", "bs", "website", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "element_r5", "_r4", "UsersComponent", "darkModeService", "translateService", "store", "inject", "UserStore", "toastr", "ToastrService", "dataSource", "MatTableDataSource", "displayedColumns", "dialog", "MatDialog", "cdr", "ChangeDetectorRef", "paginator", "pageSizeOptions", "pageSize", "searchTerm", "constructor", "effect", "data", "users", "console", "warn", "error", "detectChanges", "ngOnInit", "loadUsers", "filterPredicate", "filter", "toLowerCase", "includes", "toString", "ngOnDestroy", "log", "addUser", "openPopup", "userId", "open", "AddUserComponent", "width", "exitAnimationDuration", "enterAnimationDuration", "applyFilter", "event", "filterValue", "target", "value", "trim", "firstPage", "\u0275\u0275directiveInject", "DarkModeService", "TranslateService", "selectors", "viewQuery", "rf", "ctx", "MatPaginator", "\u0275\u0275twoWayListener", "$event", "i0", "\u0275\u0275twoWayBindingSet", "\u0275\u0275element", "\u0275\u0275template", "UsersComponent_tr_34_Template", "UsersComponent_div_40_Template", "\u0275\u0275classProp", "isDarkMode", "\u0275\u0275property", "\u0275\u0275interpolate1", "\u0275\u0275twoWayProperty", "\u0275\u0275pipeBind3", "filteredData", "pageIndex", "MatCardModule", "MatButtonModule", "MatDialogModule", "MatTableModule", "MatPaginatorModule", "CommonModule", "NgForOf", "SlicePipe", "FormsModule", "DefaultValueAccessor", "NgControlStatus", "NgModel", "MatInputModule", "TranslateModule", "TranslatePipe", "encapsulation"]
}
